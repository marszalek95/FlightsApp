{% extends 'base.html.twig' %}

{% block title %}Add new flight!{% endblock %}

{% block head %}
    {{ parent() }}

    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js'></script>      
    <script>
    {% if departure %}
    document.addEventListener('DOMContentLoaded', function() {
      var calendarEl = document.getElementById('calendarDepart');
      var calendar = new FullCalendar.Calendar(calendarEl, {  
          events: [],  // Set to an empty array to avoid fetching from /events  
          eventOrder: "eventProperty",
          height: 550,
          themeSystem: 'bootstrap5',
          eventBackgroundColor: '#2c3e50',
          eventClick: function(info) {
            // Extract the event date and format it to YYYY-MM-DD
            var eventDate = info.event.startStr;
            console.log(info.event);
            // Find the button with the data-action attribute and trigger a click
            var button = document.querySelector('button[data-live-action-param="addDeparture"]');
            if (button) {
                // Set a custom attribute or data parameter if needed
                button.setAttribute('data-live-departure-param', eventDate);
                
                // Trigger the click event on the button to call the live action
                button.click();
            }
          },
          datesSet: function (info) {
            var dateCalendar = calendar.getDate();
            date = dateCalendar.toLocaleDateString('en-CA');
            fetchEvents(date);
          }
        });
        calendar.render();

        function fetchEvents(date) {
        // Fetch events from server
           fetch(`/events?date=${date}&departure={{ departure }}&destination={{ destination }}`)
              .then(response => response.json())
              .then(response => {
                  console.log(response);
                  flights = JSON.parse(response);
                  calendar.removeAllEvents(); // Remove all existing events
                  calendar.addEventSource(flights); // Add new events
              })
              .catch(error => console.error('Error fetching events:', error));
        }
    });
    {% endif %}



    {% if destination %}
    document.addEventListener('DOMContentLoaded', function() {
      var calendarEl = document.getElementById('calendarReturn');
      var calendar = new FullCalendar.Calendar(calendarEl, {    
          events: [],  // Set to an empty array to avoid fetching from /events  
          eventOrder: "eventProperty",
          height: 550,
          themeSystem: 'bootstrap5',
          eventBackgroundColor: '#2c3e50',
          eventClick: function(info) {
            // Extract the event date and format it to YYYY-MM-DD
            var eventDate = info.event.startStr;
            console.log(info.event);
            // Find the button with the data-action attribute and trigger a click
            var button = document.querySelector('button[data-live-action-param="addDestination"]');
            if (button) {
                // Set a custom attribute or data parameter if needed
                button.setAttribute('data-live-destination-param', eventDate);
                
                // Trigger the click event on the button to call the live action
                button.click();
            }
          },
          datesSet: function (info) {
            var dateCalendar = calendar.getDate();
            date = dateCalendar.toLocaleDateString('en-CA');
            fetchEvents(date);
          }
        });
        calendar.render();

        function fetchEvents(date) {
        // Fetch events from server
           fetch(`/events?date=${date}&departure={{ destination }}&destination={{ departure }}`)
              .then(response => response.json())
              .then(response => {
                  console.log(response);
                  flights = JSON.parse(response);
                  calendar.removeAllEvents(); // Remove all existing events
                  calendar.addEventSource(flights); // Add new events
              })
              .catch(error => console.error('Error fetching events:', error));
        }
    });
    {% endif %}
    </script>
    
   


  

{% endblock %}

{% block body %}



  {# [{"title": "269z≈Çhehe", "start": "2024-02-26"},{"title": "9:30 - 11:30", "start": "2024-02-26"}]; #}
  
<div class="container-fluid mt-2">
    {% include 'sidebar.html.twig' %}
    <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
      {% for message in app.flashes('success') %}
        <div class="alert alert-success">
            {{ message }}
        </div>
    {% endfor %}
      <h4>Flight Search</h1>
      <div class="row">
        {{ component('SearchFlights', {
          form: form
      }) }}

      {{ component('SaveFlights', {
        form: saveform,
        type: type,
        departure: departure,
        destination: destination,
      }) }}

            
          
      </div>
      
      
      
      {% if departure %}
      <div class="row">       
          <!-- First Column (col-md-4 for medium and larger screens) -->
          <div class="col-md-4">
            <h4> Departure </h1>
            <div id='calendarDepart' data-action="live#action" data-live-action-param="addDeparture"></div>
          </div>
          {% if destination %}
          <!-- Second Column (col-md-4 for medium and larger screens) -->
           <div class="col-md-4">
            <h4> Return </h1>
            <div id='calendarReturn' data-action="live#action" data-live-action-param="addDestination"></div>
          </div>
          {% endif %}
      {% endif %}

    
      </div>
    </main>
</div>

{% endblock %}
